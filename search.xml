<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Install Openshift Cluster on AWS</title>
      <link href="/2020/07/12/install-openshift-cluster-on-aws/"/>
      <url>/2020/07/12/install-openshift-cluster-on-aws/</url>
      
        <content type="html"><![CDATA[<h1 id="Install-Openshift-Cluster-on-AWS"><a href="#Install-Openshift-Cluster-on-AWS" class="headerlink" title="Install Openshift Cluster on AWS"></a>Install Openshift Cluster on AWS</h1><h6 id="tags-blog"><a href="#tags-blog" class="headerlink" title="tags: blog"></a>tags: <code>blog</code></h6><h2 id="Install-the-AWS-CLI-tools-Optional"><a href="#Install-the-AWS-CLI-tools-Optional" class="headerlink" title="Install the AWS CLI tools(Optional):"></a>Install the AWS CLI tools(Optional):</h2><h3 id="Download-the-latest-AWS-Command-Line-Interface"><a href="#Download-the-latest-AWS-Command-Line-Interface" class="headerlink" title="Download the latest AWS Command Line Interface"></a>Download the latest AWS Command Line Interface</h3><pre><code>sudo -icurl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"unzip awscli-bundle.zip</code></pre><h3 id="Install-the-AWS-CLI-into-bin-aws"><a href="#Install-the-AWS-CLI-into-bin-aws" class="headerlink" title="Install the AWS CLI into /bin/aws"></a>Install the AWS CLI into /bin/aws</h3><p><code>./awscli-bundle/install -i /usr/local/aws -b /bin/aws</code></p><h3 id="Validate-the-AWS-CLI-works"><a href="#Validate-the-AWS-CLI-works" class="headerlink" title="Validate the AWS CLI works"></a>Validate the AWS CLI works</h3><p><code>aws --version</code></p><h3 id="Clean-up-downloaded-files"><a href="#Clean-up-downloaded-files" class="headerlink" title="Clean up downloaded files"></a>Clean up downloaded files</h3><p><code>rm -rf /root/awscli-bundle /root/awscli-bundle.zip</code></p><h2 id="Preparation-before-Run-OpenShift-Installer"><a href="#Preparation-before-Run-OpenShift-Installer" class="headerlink" title="Preparation before Run OpenShift Installer:"></a>Preparation before Run OpenShift Installer:</h2><h3 id="Get-the-OpenShift-installer-binary"><a href="#Get-the-OpenShift-installer-binary" class="headerlink" title="Get the OpenShift installer binary:"></a>Get the OpenShift installer binary:</h3><pre><code>OCP_VERSION=4.4.3wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_VERSION}/openshift-install-linux-${OCP_VERSION}.tar.gztar zxvf openshift-install-linux-${OCP_VERSION}.tar.gz -C /usr/binrm -f openshift-install-linux-${OCP_VERSION}.tar.gz /usr/bin/README.mdchmod +x /usr/bin/openshift-install</code></pre><h3 id="Get-the-oc-CLI-tool"><a href="#Get-the-oc-CLI-tool" class="headerlink" title="Get the oc CLI tool:"></a>Get the oc CLI tool:</h3><pre><code>wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_VERSION}/openshift-client-linux-${OCP_VERSION}.tar.gztar zxvf openshift-client-linux-${OCP_VERSION}.tar.gz -C /usr/binrm -f openshift-client-linux-${OCP_VERSION}.tar.gz /usr/bin/README.mdchmod +x /usr/bin/oc</code></pre><h3 id="Check-that-the-OpenShift-installer-and-CLI-are-in-usr-bin"><a href="#Check-that-the-OpenShift-installer-and-CLI-are-in-usr-bin" class="headerlink" title="Check that the OpenShift installer and CLI are in /usr/bin:"></a>Check that the OpenShift installer and CLI are in /usr/bin:</h3><p><code>ls -l /usr/bin/{oc,openshift-install}</code></p><h3 id="Set-up-bash-completion-for-the-OpenShift-CLI"><a href="#Set-up-bash-completion-for-the-OpenShift-CLI" class="headerlink" title="Set up bash completion for the OpenShift CLI:"></a>Set up bash completion for the OpenShift CLI:</h3><p><code>oc completion bash &gt;/etc/bash_completion.d/openshift</code></p><h3 id="Exit-the-super-mode-or-ctrl-D"><a href="#Exit-the-super-mode-or-ctrl-D" class="headerlink" title="Exit the super mode or ctrl+D"></a>Exit the super mode or ctrl+D</h3><p><code>exit</code></p><h3 id="Save-your-provided-AWS-credentials-to-the-HOME-aws-credentials-file"><a href="#Save-your-provided-AWS-credentials-to-the-HOME-aws-credentials-file" class="headerlink" title="Save your provided AWS credentials to the $HOME/.aws/credentials file"></a>Save your provided AWS credentials to the $HOME/.aws/credentials file</h3><pre><code>export AWSKEY=&lt;YOURACCESSKEY&gt;export AWSSECRETKEY=&lt;YOURSECRETKEY&gt;export REGION=us-east-2mkdir $HOME/.awscat &lt;&lt; EOF &gt;&gt;  $HOME/.aws/credentials[User name]aws_access_key_id = ${AWSKEY}aws_secret_access_key = ${AWSSECRETKEY}region = $REGIONEOF</code></pre><h3 id="Check-your-credentials-work"><a href="#Check-your-credentials-work" class="headerlink" title="Check your credentials work:"></a>Check your credentials work:</h3><p><code>aws sts get-caller-identity</code></p><h3 id="Copy-pull-secret"><a href="#Copy-pull-secret" class="headerlink" title="Copy pull secret:"></a>Copy pull secret:</h3><ul><li>go to <a href="https://www.openshift.com/try" target="_blank" rel="noopener">https://www.openshift.com/try</a></li><li>Click Create your Own Cluster and then Try it in the cloud</li><li>For Infrastructure Provider, click <code>AWS</code></li><li>Click Installer-Provisioned-Infrastructure</li><li>Copy Pull Secret<h3 id="Double-check"><a href="#Double-check" class="headerlink" title="Double check"></a>Double check</h3>pull secret contains credentials for all three container registries: quay.io, registry.connect.redhat.com, and registry.redhat.io as well as cloud.openshift.com.</li></ul><h3 id="Create-an-SSH-keypair-for-your-OpenShift-environment"><a href="#Create-an-SSH-keypair-for-your-OpenShift-environment" class="headerlink" title="Create an SSH keypair for your OpenShift environment:"></a>Create an SSH keypair for your OpenShift environment:</h3><p><code>ssh-keygen -f ~/.ssh/cluster-${GUID}-key -N</code></p><h2 id="Install-OpenShift-Container-Platform"><a href="#Install-OpenShift-Container-Platform" class="headerlink" title="Install OpenShift Container Platform:"></a>Install OpenShift Container Platform:</h2><h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p>The main assets generated by the installer are the Ignition configs for the bootstrap, master, and worker machines. Given these three configs (and correctly configured infrastructure), it is possible to start an OpenShift cluster. The process for bootstrapping a cluster looks like the following:</p><ul><li><p>The bootstrap machine boots and starts hosting the remote resources required for the master machines to boot.</p></li><li><p>The master machines fetch the remote resources from the bootstrap machine and finish booting.</p></li><li><p>The master machines use the bootstrap node to form an etcd cluster.</p></li><li><p>The bootstrap node starts a temporary Kubernetes control plane using the newly created etcd cluster.</p></li><li><p>The temporary control plane schedules the production control plane to the master machines.</p></li><li><p>The temporary control plane shuts down, yielding to the production control plane.</p></li><li><p>The bootstrap node injects OpenShift-specific components into the newly formed control plane.</p></li><li><p>The installer then tears down the bootstrap node.</p></li><li><p>The result of this bootstrapping process is a fully running OpenShift cluster. The cluster will then download and configure the remaining components needed for day-to-day operation, including the creation of worker machines on supported platforms.</p></li><li><p>The installer uses a wizard approach, asking a few questions about the environment before executing the installation. If you want to avoid the wizard or run the installer from a shell script, it is useful to set up environment variables for a particular cloud platform.</p></li></ul><h3 id="Run-OpenShift-Installer"><a href="#Run-OpenShift-Installer" class="headerlink" title="Run OpenShift Installer"></a>Run OpenShift Installer</h3><pre><code>openshift-install create cluster --dir $HOME/cluster-${GUID}? SSH Public Key /home/&lt;OpenTLC User&gt;/.ssh/cluster-&lt;GUID&gt;-key.pub? Platform awsINFO Credentials loaded from the "default" profile in file "/home/&lt;OpenTLC User&gt;/.aws/credentials"? Region us-east-2 (Ohio)? Base Domain sandboxNNN.opentlc.com? Cluster Name cluster-&lt;GUID&gt;? Pull Secret [? for help] ***************************************************************************************************************************************************************</code></pre><h3 id="Custom"><a href="#Custom" class="headerlink" title="Custom"></a>Custom</h3><p>It is possible to run a multi-step installation.</p><p>Create the installation configuration:<br><code>openshift-install create install-config --dir $HOME/cluster-${GUID}</code></p><p>Update the generated install-config.yaml file—for example, change the AWS EC2 instance types.</p><p>Create the YAML manifests:<br>`openshift-install create manifests –dir $HOME/cluster-${GUID}``</p><p>Create the Ignition configuration files:<br><code>openshift-install create ignition-configs --dir $HOME/cluster-${GUID}</code></p><p>Install the cluster:<br><code>openshift-install create cluster --dir $HOME/cluster-${GUID}</code></p><p>To delete the cluster, use:<br><code>openshift-install destroy cluster --dir $HOME/cluster-${GUID}</code></p><p>Validate Cluster</p><pre><code>Set up the CLIexport KUBECONFIG=$HOME/cluster-${GUID}/auth/kubeconfigecho "export KUBECONFIG=$HOME/cluster-${GUID}/auth/kubeconfig" &gt;&gt;$HOME/.bashrcoc whoami oc get nodes oc get pod -AClean Up Cluster (Reference)</code></pre><p>Delete the cluster:<br><code>openshift-install destroy cluster --dir $HOME/cluster-${GUID}</code></p><p>Delete all of the files created by the OpenShift installer:</p><pre><code>rm -rf $HOME/.kuberm -rf $HOME/cluster-${GUID}</code></pre><p>Ref:<br><a href="https://github.com/openshift/installer/blob/master/docs/user/aws/README.md" target="_blank" rel="noopener">https://github.com/openshift/installer/blob/master/docs/user/aws/README.md</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Openshift </tag>
            
            <tag> AWS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/12/hello-world/"/>
      <url>/2020/07/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
